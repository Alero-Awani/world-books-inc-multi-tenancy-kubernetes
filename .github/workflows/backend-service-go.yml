name: Deploy Golang Backend Service
on: 
  push:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  IMAGE_NAME: backend-service-go
  IMAGE_TAG: ${{ github.sha }}
  envkey_ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  envkey_SERVER_PORT: ${{ secrets.SERVER_PORT }}
  envkey_CONTEXT_TIMEOUT: ${{ secrets.CONTEXT_TIMEOUT }}
  envkey_BACKEND_SERVICE_URL: ${{ secrets.BACKEND_SERVICE_URL }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  # backend-service-go folder job.
  deploy_eureka_api_gateway_go:
    name: Deploy World Books Inc Backend Service Go to AWS EKS
    runs-on: ubuntu-latest

    defaults:
      run:
        # backend-service-go folder working directory.
        working-directory: backend-service-go

    steps:
      - name: Check Out the Code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        id: install

      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
      - name: Install helm
        run: |
          curl -LO https://get.helm.sh/helm-v3.12.3-linux-amd64.tar.gz
          tar xfz helm-v3.12.3-linux-amd64.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubAction-AssumeRoleWithAction
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch the Caller Identity
        run: |
          aws sts get-caller-identity
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load envs and save to .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          fail_on_empty: true
          file_name: .env

      - name: Build, Tag, and Push the Image to AWS ECR
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:latest ../backend-service-go
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME

      - name: Update kubeconfig to access EKS cluster
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS using Helm
        run: |
          helm upgrade --install $IMAGE_NAME ../charts \
            --set appName=world-books-inc \
            --set deployment.image.repository=$ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME \
            --set deployment.image.tag=$IMAGE_TAG \
            --namespace default \
 
